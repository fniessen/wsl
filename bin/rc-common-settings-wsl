# Hey Emacs, this is a -*- sh -*- file ...
# NOTE: This file is meant to be sourced (e.g. from .bashrc or .zshrc)

# Ensure $HOME/winbin is in the PATH, without duplicating it.
if [[ -d "$HOME/winbin" && ":$PATH:" != *":$HOME/winbin:"* ]]; then
    export PATH="$HOME/winbin:$PATH"
fi

# Exit early if not running under WSL.
if [[ -z "$WSL_DISTRO_NAME" ]]; then
    return 0                            # Skip this script silently.
fi

# Create aliases for mounted drives (e.g., cdrive for /mnt/c).
for d in {c..z}; do
    mountpoint="/mnt/$d"
    [[ -d "$mountpoint" ]] || continue
    upper_d=$(printf "%s" "$d" | tr '[:lower:]' '[:upper:]')
    alias "${d}:"="cd $mountpoint 2> /dev/null || printf >&2 \"ERROR: Drive $upper_d: not mounted or inaccessible\n\""
done

# Open Windows File Explorer with path conversion.
explorer() {
    local path="$1"
    # Default to current directory if no argument is given.
    if [[ -z "$path" ]]; then
        path="."
    fi

    # Convert WSL path to Windows format: /mnt/c/foo -> C:\foo.
    path=$(echo "$path" | sed 's|^/mnt/\([a-zA-Z]\)|\1:|; s|/|\\|g')
    explorer.exe "$path"
}

# Redirect open and xdg-open to Windows Explorer, unless explicitly disabled.
if command -v explorer.exe &> /dev/null && [[ -z "$DISABLE_WSL_WINDOWS_OPEN" ]]; then
    open() { explorer "$@"; }
    xdg-open() { explorer "$@"; }
fi

# Wrapper for running Windows cmd commands.
cmd() {
    if [[ -z "$*" ]]; then
        echo "Usage: cmd COMMAND" >&2
        return 64                   # EX_USAGE: Command-line usage error.
    fi
    cmd.exe /C "$@"
}

# Alias for launching PowerShell without logo.
alias powershell='powershell.exe -NoLogo'
